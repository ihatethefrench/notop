#!/usr/bin/env bash

if [ "$1" -eq "$1" ] 1>&- 2>&-
then
	echo ""
	ps acux | head -n 1 | tr '[:upper:]' '[:lower:]'
	if [ "$2" == "cpu" ]
	then
		ps acux | sort -nrk 3,3 | head -n $(($1+1)) | tr '[:upper:]' '[:lower:]'
	elif [ "$2" == "mem" ]
	then
		ps acux | sort -nrk 4,4 | head -n $(($1+1)) | tr '[:upper:]' '[:lower:]'
	else
		ps acux | sort -nrk 3,3 | head -n $(($1+1)) | tr '[:upper:]' '[:lower:]'
	fi
	echo ""
fi

if [ "$1" == "kill" ]
then
	pkill $2
	if [ "$?" == "0" ]
	then
		echo ""
		echo "> successfully killed $2"
		echo ""
	else
		echo ""
		echo "> couldn't kill $2 , check spelling or try again"
		echo ""
	fi
fi

if [ "$1" == "info" ]
then
	echo ""
	echo "> $2"
	echo $(ps -p $(pgrep $2 | head -n 1) -o pid,%cpu,%mem | head -1) | tr '[:upper:]' '[:lower:]'
	echo $(ps -p $(pgrep $2 | head -n 1) -o pid,%cpu,%mem | tail -1) | tr '[:upper:]' '[:lower:]'
	echo ""
fi

if [ "$1" == "sysinfo" ]
then
	echo ""
	uptime
	echo ""
	sumcores=$(ps -eo %cpu | tr '\n' '+' | sed 's/+  / + /g' | sed 's/%CPU +//g' | sed 's/%CPU+//g'  | cut -c1- | sed 's/.$//' | bc)
	echo "> cpu: $(echo "$sumcores / $(getconf _NPROCESSORS_ONLN)" | bc)% across $(getconf _NPROCESSORS_ONLN) logical core(s)"
	if [ $(uname -s) == "Darwin" ]
	then
		totalmem="of $(echo "scale=2;$(sysctl -n hw.memsize) / 1073741824" | bc)gb"
	elif [ $(uname -s) == "FreeBSD" ]
	then
		totalmem="of $(echo "scale=2;$(sysctl -n hw.physmem) / 1073741824" | bc)gb"
	elif [ $(uname -s) == "Linux" ]
	then
		totalmem="of $(echo "scale=2;$(cat /proc/meminfo | grep -i memtotal: | sed 's/MemTotal://g' | sed 's/ //g' | sed 's/kB//g') / 1048576" | bc)gb"
	else
		totalmem=""
	fi
	echo "> ram: $(ps -eo %mem | tr '\n' '+' | sed 's/+  / + /g' | sed 's/%MEM+//g' | cut -c1- | sed 's/.$//' | bc)% $totalmem"
	echo "> total active processes: $(echo "$(ps aux | wc -l) - 1" | bc)"
	echo ""	
fi

if [ "$1" == "" ]
then
	echo ""
	echo "> no subcommands specified, check \"notop help\" and try again"
	echo ""
fi

if [ "$1" == "help" ]
then
	echo ""
	echo "> usage:"
	echo ""
	echo "notop x"
	echo "notop info/kill process"
	echo "notop sysinfo"
	echo ""
	echo "\"x\" - amount of processes to list"
	echo "\"info\" - show information on a process"
	echo "\"kill\" - kill a process"
	echo "\"sysinfo\" - display general system info (total cpu%, mem%, load etc."
	echo ""
fi
